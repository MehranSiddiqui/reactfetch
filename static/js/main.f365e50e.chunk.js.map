{"version":3,"sources":["component/FetchApi/FetchApi.jsx","App.js","reportWebVitals.js","index.js"],"names":["FetchApi","_useState","useState","_useState2","Object","slicedToArray","Images","setImages","getApiData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","jsonData","wrap","_context","prev","next","fetch","sent","json","stop","apply","this","arguments","useEffect","react_default","createElement","className","map","item","href","download_url","src","alt","author","height","width","App","component_FetchApi_FetchApi","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App","document","getElementById"],"mappings":"+QA+BeA,SA7BE,WACf,IAAAC,EAA4BC,mBAAS,IAArCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOK,EAAPH,EAAA,GAAeI,EAAfJ,EAAA,GACMK,EAAU,eAAAC,EAAAL,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMC,MAAM,iCADZ,cACXN,EADWG,EAAAI,KAAAJ,EAAAE,KAAA,EAEIL,EAASQ,OAFb,OAEbP,EAFaE,EAAAI,KAGjBf,EAAUS,GAHO,wBAAAE,EAAAM,SAAAV,MAAH,yBAAAL,EAAAgB,MAAAC,KAAAC,YAAA,GAQhB,OAHAC,oBAAU,WACRpB,KACC,IAEDqB,EAAAjB,EAAAkB,cAAA,OAAKC,UAAU,iBACZzB,EAAO0B,IAAI,SAACC,GACX,OACEJ,EAAAjB,EAAAkB,cAAA,WACED,EAAAjB,EAAAkB,cAAA,KAAGI,KAAMD,EAAKE,cACZN,EAAAjB,EAAAkB,cAAA,OAAKM,IAAKH,EAAKE,aAAcE,IAAI,MAEnCR,EAAAjB,EAAAkB,cAAA,UAAKG,EAAKK,QACVT,EAAAjB,EAAAkB,cAAA,0BACiBG,EAAKM,OADtB,kBAC6CN,EAAKO,aCT/CC,MARf,WACE,OACEZ,EAAAjB,EAAAkB,cAAA,WACED,EAAAjB,EAAAkB,cAACY,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAvC,GAAiD,IAA9CyC,EAA8CzC,EAA9CyC,OAAQC,EAAsC1C,EAAtC0C,OAAQC,EAA8B3C,EAA9B2C,OAAQC,EAAsB5C,EAAtB4C,OAAQC,EAAc7C,EAAd6C,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OAAO3B,EAAAjB,EAAAkB,cAAC2B,EAAD,MAASC,SAASC,eAAe,SAKjDhB","file":"static/js/main.f365e50e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./fetchApi.css\";\r\nconst FetchApi = () => {\r\n  const [Images, setImages] = useState([]);\r\n  const getApiData = async () => {\r\n    const response = await fetch(\"https://picsum.photos/v2/list\");\r\n    let jsonData = await response.json();\r\n    setImages(jsonData);\r\n  };\r\n  useEffect(() => {\r\n    getApiData();\r\n  }, []);\r\n  return (\r\n    <div className=\"div-container\">\r\n      {Images.map((item) => {\r\n        return (\r\n          <div>\r\n            <a href={item.download_url}>\r\n              <img src={item.download_url} alt=\"\" />\r\n            </a>\r\n            <h4>{item.author}</h4>\r\n            <p>\r\n              Actual Height:{item.height}||Actual Width:{item.width}\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FetchApi;\r\n","import React from 'react';\n\nimport \"./App.css\";\n\nimport FetchApi from \"./component/FetchApi/FetchApi\";\nfunction App() {\n  return (\n    <div>\n      <FetchApi />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}